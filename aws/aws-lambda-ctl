#!/usr/bin/env python
import json
import boto3
from optparse import OptionParser

def main():
    parser = OptionParser()
    parser.add_option("-s", "--source", dest="source",
                  help="source alias")
    parser.add_option("-f", "--function", dest="function",
                  help="AWS lambda function")
    parser.add_option("-d", "--destination", dest="destination",
                  help="destination alias")
    parser.add_option("-v", "--version", dest="version",
                  help="AWS lambda version")
    parser.add_option("-l", "--list",
                  action="store_true", dest="list", default=False,
                  help="list lambda")
    (options, args) = parser.parse_args()

    client = boto3.client('lambda')
    if options.list:
        res = client.list_functions()
        print json.dumps(res, indent=4)
    else:
        res = client.list_aliases(FunctionName=options.function)
        s_version = None
        d_version = None
        for alias in res['Aliases']:
            if alias['Name'] == options.source:
                s_version = alias['FunctionVersion']
            if alias['Name'] == options.destination:
                d_version = alias['FunctionVersion']
        if s_version != None and d_version != None:
            print('set alias {} from ver: {} to ver: {}'.format(options.source, s_version, d_version))
            ret = client.update_alias(FunctionName=options.function, Name=options.source, FunctionVersion=d_version)
            print('result:')
            print json.dumps(ret, indent=4)

if __name__ == "__main__":
    main()
